#!/usr/bin/perl

use strict;

use Fcntl qw(:DEFAULT :flock);

my $stats_file="/var/run/random-add.pid";

if ( $#ARGV eq 0 and $ARGV[0] eq "autoconf" ) {
	print "yes\n";
	exit;
}

if ( $#ARGV eq 0 and $ARGV[0] eq "config" ) {

	print "graph_title Entropy Usage\n";
	print "graph_args --base 1000 --alt-autoscale-max --slope-mode\n";
	print "graph_vlabel Bytes per second\n";
	print "graph_category system\n";
	print "graph_info This graph shows the amount of entrophy in bytes ".
		"that has been used by the system. This is calculated by how ".
		"many bytes random-add has added to /dev/random\n";
	#print "processes.draw LINE2\n";
	print "entropyusage.label usage\n";
	print "entropyusage.type DERIVE\n";
    	print "entropyusage.min 0\n";
	print "entropyusage.max 50000\n";
	print "entropyusage.info The number of used random bytes.\n";
	exit 0;
}

# get total data for today from stats file
# Total added bytes is 209237
print "entropyusage.value ";
if ( open(STATS, "$stats_file") ) {
	flock(STATS,LOCK_EX);
	my $totals = <STATS>;
	close(STATS);
	if ( defined $totals ) {
		chomp $totals;
		my @split_totals = split( / / , $totals);
		if ( $#split_totals eq 6 and $split_totals[6] ge 0 ) {
			print $split_totals[6]."\n";
			exit 0;
		}
		# will print U for error
	}
}

print "U\n";
exit 1;

